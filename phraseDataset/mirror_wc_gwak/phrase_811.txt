“그러니까, 키보드로 간단하게 메뉴를 고르거나 마우스로 아이콘을 클릭하거나 해서 어지간한 작업은 완전 자동 작업으로 다 할 수 있고요, 정밀하게 조종하려면 이 조종 장갑을 끼고 사람이 팔과 손을 움직이면 그 움직임 대로 로봇도 팔을 움직이지요.” 키보드를 보는 박 과장은 말이 없었다. 김 박사는 그 말 없음이 불길하다는 생각이 들었다. 그래도 이번만큼 사업이 쉽게 잘 풀린 적이 없는데, 뭐 대단한 큰 문제가 생기겠냐고 생각해 보려고 했다. 그러나 불안함은 가시지 않았다. 김 박사는 동료인 이 박사가 자신감 있는 표정을 짓고 있는 것을 보면 불안함이 가실까 싶어 이 박사를 바라 보았다. 그런데 이 박사의 얼굴에도 어두운 기색이 아주 조금이지만 퍼지고 있었다. 마침내 박 과장이 말하기 시작했다. “그러니까 로봇이 걸어 가면서 움직이는 방향도 다 이 컴퓨터 화면과 키보드로 조종한다는 거죠?” “네, 그렇습니다.” “하하, 역시 박 과장님. 따로 설명 안 드려도 바로 이해하시네요. 정말 대단하십니다.” 이 박사의 목소리는 밝았다. 하지만 밝아지려고 애쓰는 목소리라는 사실을 김 박사는 느낄 수 있었다. 박 과장이 이어서 말했다. “그런데, 아무래도 너무 불편한 것 같은데요. 우리가 상식적으로 이런 탈 것을 조종한다고 하면 핸들하고 페달로 조종하지 않습니까? 어쨌거나 이것도 지상에서 움직이는 탈 것인데, 핸들로 운전이 안 된다면 너무 불편한데요.” 김 박사는 박 과장을 쳐다 보았다. 김 박사는 아직 희망을 잃지 않고 최대한 긍정적이고 밝은 느낌의 표정을 짓고는 이렇게 말했다. “자동차는 바퀴로 움직이잖아요. 그리고 그 바퀴의 접선 방향으로 직선 운동 하는 것이 원칙이고. 그러니까 자동차는 바퀴가 배열된 방향을 운전대만 돌려서 방향을 조종한다는 것을 쉽게 생각할 수 있는 거죠. 그렇지만, 이 로봇은 두 다리로 걸어서 움직이지 않습니까. 그래서 단순히 직선 운동의 원칙대로 움직이는 게 아니거든요. 계속해서 무게 중심이 바뀌는 상황에서 다리의 움직임이 조절되면서 한 걸음 한 걸음을 내딛는데 따라서 움직여야 하는 관절 부위가 계속 다르게 동작해야 됩니다. 그러니까 단순하게 조종하기가 어렵지요. 그래서 모든 움직임은 컴퓨터의 인공지능에 의해 조종이 되고요, 그 컴퓨터를 보통 컴퓨터 사용하듯이 키보드와 마우스로 조작하는 거니까, 이 로봇 조종은 컴퓨터 조종하듯이 하는 게 쉽게 생각할 수 있는 겁니다. 정밀한 동작을 할 때는 조종 장갑을 끼고 직접 몸을 움직이면 되고요.” 이 박사가 옆에서 덧붙여 말했다. “이거 진짜 보통 컴퓨터로 인터넷 하거나 게임 하는 것하고 똑같아요. 그냥 평범한 보통 컴퓨터 프로그램입니다.” 박 과장은 김 박사와 이 박사가 짓고 있는 것과 같은 밝은 표정을 따라 지었다. 김 박사는 두려워지기 시작했다. 박 과장이 이야기했다. “항상 모든 애플리캐이션은 유저의 유저빌리티가 가장 중요하다는 것 아시죠?” 중요하긴 중요하겠지만 뭘 또 가장 중요하다고 할 건 뭔데? 라는 생각이 김 박사의 마음에 생겨 났다. “네, 네. 유저빌리티가 제일 중요하긴하죠.” “그런데, 지금 이 로봇은 유저에 포커싱한 유저빌리티가 아니에요. 완전히 개발자에만 포커싱한 유저빌리티지. 이런 로봇은 작동시키기가 너무 어려워서 쓸 수가 없다고요. 실제로 유저가 사용을 안 하면 수 천만원짜리 로봇이 10대, 100대가 있어도 무슨 소용인가요?” “그런데, 그렇다고 여기에 자동차 운전대 같은 운전대를 달면 그것도 문제인게 ...” 김 박사가 말하려는 중에 이 박사가 잠깐 손짓했다. 그러더니 몰래 김 박사에게만 말했다. “박사님, 그냥 하라는 대로 하죠.” “뭐?” “그냥 죽이 되든 밥이 되든 하라는 대로 하자고요. 괜히 그렇게 하면 무슨 부작용이 있다고 문제점 같은 걸 지적하면, 하라는 건 하라는 대로 하고 그 다음에 그 문제점을 개선하기 위한 일도 또 해야 한다고 더 이상한 거 하라고 할 지도 모르잖아요. 그랬을 때 그렇게 하면 더 이상하게 꼬인다고 말하면, 그건 그거대로 하고, 또다시 그 꼬인 점을 개선하기 위해서 더욱 더 이상한 걸 하나 더 하라고 할 거고.” 김 박사는 흘깃 박 과장의 표정을 쳐다 보았다. 둘만 속닥거리면서 이야기하는 것을 박 과장이 기분 나빠할 것 같다는 생각이 몰아쳤다. 김 박사가 박 과장에게 말했다. “아, 과장님, 죄송합니다.” “아까 하시려던 이야기가 뭐였죠?” “아니오. 아무래도 로봇이 두 발로 걸어 가는 것이 자동차 운전대로 운전하는 자동차 하고 딱 맞아 떨어지는 움직임은 아니라서요. 지금처럼 그냥 컴퓨터를 바로 조작하는 게 막상 해 보면 오히려 더 편할 것 같은데요.” “네?” 김 박사는 박 과장이 “네?” 라고 발음할 때의 음성의 높이가 약간 묘하다고 느꼈다. 혹시 자신을 무시했다고 생각하는 것은 아닐까? 공포감이 느껴졌다. 비슷한 공포감을 같이 느꼈는지 이 박사가 끼어들었다. “하하하, 개발자들이 항상 이렇죠. 뭐든 고쳐달라고 하면 일단 안 된다고 말하고. 그런 게 우리 같은 개발자들이죠.” 박 과장은 같이 웃었다. 다소 길게 이어진 웃음을 마치고 박 과장이 김 박사에게 말했다. “김 박사님, 김 박사님도 하이 레벨로 가실 수록 단순히 개발자 마인드에만 갇혀 있는 게 아니라, 엔터프라이즈 마인드가 있어야 돼요. 김 박사님도 프로페셔널이니까 지금 제가 지적하는 포인트를 기분 나쁘게 듣지는 않을 거라고 생각하고 솔직하게 말할께요. 사실 지금 김 박사님이 만드신 시제품은 유저빌리티가 너무 떨어지기 때문에 그냥 아무도 못 쓰는 고철덩어리를 만든 것이나 다름 없어요. 개발자 마인드에서는 가치가 아주 높은 결과물이겠지만, 엔터프라이즈 마인드로는 가치가 0이라고요, 0.” “하하, 그렇긴 하죠.” 박 과장은 뭔가 멋있는 말을 잠시 생각하는 듯 보였다. 이윽고 이렇게 말했다. 